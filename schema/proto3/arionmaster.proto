/*
MIT License
Copyright(c) 2020 Futurewei Cloud

    Permission is hereby granted,
    free of charge, to any person obtaining a copy of this software and associated documentation files(the "Software"), to deal in the Software without restriction,
    including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and / or sell copies of the Software, and to permit persons
    to whom the Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

syntax = "proto3";

package alcor.schema;

option java_package = "com.futurewei.alcor.schema";

import "common.proto";
import "goalstateprovisioner.proto";
import "neighbor.proto";



service ArionMasterService {

  rpc PushGoalstates (NeighborRulesRequest) returns (GoalStateOperationReply) {
  }

  rpc RequestGoalstates (HostRequest) returns (NeighborRulesResponse) {
  }

  rpc RequestGoalstateStream (stream HostRequest) returns (stream NeighborRulesResponse) {
  }
}

service Watch {

  rpc Watch (stream ArionWingRequest) returns (stream NeighborRule) {
  }
}

message ArionWingRequest {
  string vni = 1;
  string ip = 2;
  uint64 rev = 3;
  string group = 4;
}



message NeighborRule {
  OperationType operation_type = 1;

  string ip = 2;
  string hostip = 3;
  string mac = 4;
  uint32 tunnel_id = 5;
  string hostmac = 6;
  string arionwing_group = 7;
  uint64 version = 8;
}

message NeighborRulesRequest {
  uint32 format_version = 1;
  string request_id = 2;

  repeated NeighborState neigborstates = 3;
}

message NeighborRulesResponse {
  uint32 format_version = 1;

  message NeighborRuleReply {
    string request_id = 1;
    NeighborRule neighborrule = 2;
  }
  repeated NeighborRuleReply neighborrules = 2;
}